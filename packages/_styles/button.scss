@import "./common/index.scss";

.t-button {
  color: $color;
  cursor: pointer;
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  line-height: 1;
  border: 1px solid $border;
  vertical-align: middle;
  border-radius: $borderRadius;
  font-size: 14px;
  transition: all $delay;
  user-select: none;

  span {
    vertical-align: middle;
  }
}

.t-button-size {
  &-large {
    height: $largeHeight;
    padding: 8px 12px;
    font-size: 16px;
    border-radius: $borderRadiusLarge;
  }

  &-default {
    height: $height;
    padding: 4px 10px;
  }

  &-small {
    height: $smallHeight;
    padding: 2px 6px;
  }
}

@mixin primary ($color: white, $bg: $primary, $bgHover: $primaryHover,$bgActive: $primaryActive) {
  color: $color;
  background: $bg;
  border-color: $bg;

  &:hover,
  &:focus {
    background: $bgHover;
    border-color: $bgHover;
  }

  &:active {
    background: $bgActive;
    border-color: $bgActive;
  }

  &:disabled {
    background: $primaryDisabled;
    border-color: $primaryDisabled;
    cursor: not-allowed;
  }
}

@mixin default ($bdHover: $primaryHover, $bdActive: $primaryActive, $isDanger: false) {
  background: white;

  @if ($isDanger) {
    color: $danger;
    border-color: $danger;
  }

  &:hover,
  &:focus {
    color: $bdHover;
    border-color: $bdHover;
  }

  &:active {
    color: $bdActive;
    border-color:$bdActive;
  }

  &:disabled {
    $disabledCol: $colorDisabled;
    @if ($isDanger) { $disabledCol: $dangerDisabled; }
    color: $disabledCol;
    border-color: $disabledCol;
    cursor: not-allowed;
  }
}

@mixin text ($colHover: $colorHover, $colActive: $colorActive, $isDanger: false) {
  border-color: transparent;
  background: white;

  @if ($isDanger) { color: $danger; }

  &:hover,
  &:focus {
    color: $colHover;
  }

  &:active {
    color: $colActive;
  }

  &:disabled {
    @if ($isDanger) { color: $dangerDisabled; }
    @else { color: $colorDisabled; }
    cursor: not-allowed;
  }
}

.t-button-type {
  &-primary {
    @include primary(white, $primary, $primaryHover, $primaryActive);

    &-danger {
      @include primary(white, $danger, $dangerHover, $dangerActive);
    }
  }

  &-default {
    @include default($primaryHover, $primaryActive);

    &-danger {
      @include default($dangerHover, $dangerActive, true);
    }
  }

  &-dashed {
    @extend .t-button-type-default;
    border-style: dashed;

    &-danger {
      @extend .t-button-type-default-danger;
      border-style: dashed;
    }
  }

  &-text {
    @include text($colorHover, $colorActive);

    &-danger {
      @include text($dangerHover, $dangerActive, true);
    }
  }
}

.t-button-block {
  width: 100%;
}

.t-button-loading {
  pointer-events: none;

  &::after {
    pointer-events: none;
    content: "";
    position: absolute;
    left: -1px;
    top: -1px;
    right: -1px;
    bottom: -1px;
    border-radius: inherit;
    background-color: rgba(255,255,255,.35);
  }
}
